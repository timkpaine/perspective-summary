var E=Object.create;var l=Object.defineProperty,O=Object.defineProperties,P=Object.getOwnPropertyDescriptor,k=Object.getOwnPropertyDescriptors,F=Object.getOwnPropertyNames,v=Object.getOwnPropertySymbols,M=Object.getPrototypeOf,y=Object.prototype.hasOwnProperty,T=Object.prototype.propertyIsEnumerable;var L=(e,t,s)=>t in e?l(e,t,{enumerable:!0,configurable:!0,writable:!0,value:s}):e[t]=s,R=(e,t)=>{for(var s in t||={})y.call(t,s)&&L(e,s,t[s]);if(v)for(var s of v(t))T.call(t,s)&&L(e,s,t[s]);return e},D=(e,t)=>O(e,k(t));var U=(e,t)=>{for(var s in t)l(e,s,{get:t[s],enumerable:!0})},I=(e,t,s,i)=>{if(t&&typeof t=="object"||typeof t=="function")for(let r of F(t))!y.call(e,r)&&r!==s&&l(e,r,{get:()=>t[r],enumerable:!(i=P(t,r))||i.enumerable});return e};var m=(e,t,s)=>(s=e!=null?E(M(e)):{},I(t||!e||!e.__esModule?l(s,"default",{value:e,enumerable:!0}):s,e)),W=e=>I(l({},"__esModule",{value:!0}),e);var B={};U(B,{lessLoader:()=>A});module.exports=W(B);var S=m(require("path")),$=require("fs"),C=m(require("less"));var p=m(require("fs")),a=m(require("path")),b=/@import.*?["']([^"']+)["'].*?/,j=/@import.*?["']([^"']+)["'].*?/g,q=/(?:\/\*(?:[\s\S]*?)\*\/)|(\/\/(?:.*)$)/gm,z=[".css",".less"],x=(e,t=[])=>{try{let s=a.default.dirname(e),o=(p.default.readFileSync(e).toString("utf8").replace(q,"").match(j)||[]).map(n=>n.match(b)[1]).filter(n=>!!n).map(n=>{let c=a.default.resolve(s,a.default.extname(n)?n:`${n}.less`);if(!p.default.existsSync(c))for(let h=0;h<t.length;h++){let g=a.default.resolve(t[h],a.default.extname(n)?n:`${n}.less`);if(p.default.existsSync(g)){c=g;break}}return c});return o.reduce((n,c)=>[...n,...x(c,t)],o).filter(n=>z.includes(a.default.extname(n).toLowerCase()))}catch(s){return[]}},w=e=>{let t=e.extract.filter(i=>i),s=t.length===3?t[1]:t[0];return{text:e.message,location:{namespace:"file",file:e.filename,line:e.line,column:e.column,lineText:s}}};var A=(e={},t={})=>({name:"less-loader",setup:s=>{let i=t.filter;s.onResolve({filter:i||/\.less$/,namespace:"file"},async r=>{let o=(await s.resolve(r.path,{kind:r.kind,importer:r.importer,resolveDir:r.resolveDir,pluginData:r.pluginData})).path;return{path:o,watchFiles:[o,...x(o,e.paths||[])]}}),s.onLoad({filter:i||/\.less$/,namespace:"file"},async r=>{let f=await $.promises.readFile(r.path,"utf-8"),o=S.default.dirname(r.path),d=D(R({filename:r.path,relativeUrls:!0},e),{paths:[...e.paths||[],o]});try{return{contents:(await C.default.render(f,d)).css,loader:"css",resolveDir:o}}catch(u){return{errors:[w(u)],resolveDir:o}}})}});0&&(module.exports={lessLoader});
