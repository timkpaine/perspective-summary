var R=Object.defineProperty,D=Object.defineProperties;var I=Object.getOwnPropertyDescriptors;var d=Object.getOwnPropertySymbols;var w=Object.prototype.hasOwnProperty,S=Object.prototype.propertyIsEnumerable;var g=(e,t,s)=>t in e?R(e,t,{enumerable:!0,configurable:!0,writable:!0,value:s}):e[t]=s,v=(e,t)=>{for(var s in t||={})w.call(t,s)&&g(e,s,t[s]);if(d)for(var s of d(t))S.call(t,s)&&g(e,s,t[s]);return e},L=(e,t)=>D(e,I(t));import P from"path";import{promises as k}from"fs";import F from"less";import f from"fs";import a from"path";var $=/@import.*?["']([^"']+)["'].*?/,C=/@import.*?["']([^"']+)["'].*?/g,E=/(?:\/\*(?:[\s\S]*?)\*\/)|(\/\/(?:.*)$)/gm,O=[".css",".less"],u=(e,t=[])=>{try{let s=a.dirname(e),o=(f.readFileSync(e).toString("utf8").replace(E,"").match(C)||[]).map(r=>r.match($)[1]).filter(r=>!!r).map(r=>{let i=a.resolve(s,a.extname(r)?r:`${r}.less`);if(!f.existsSync(i))for(let p=0;p<t.length;p++){let x=a.resolve(t[p],a.extname(r)?r:`${r}.less`);if(f.existsSync(x)){i=x;break}}return i});return o.reduce((r,i)=>[...r,...u(i,t)],o).filter(r=>O.includes(a.extname(r).toLowerCase()))}catch(s){return[]}},y=e=>{let t=e.extract.filter(c=>c),s=t.length===3?t[1]:t[0];return{text:e.message,location:{namespace:"file",file:e.filename,line:e.line,column:e.column,lineText:s}}};var A=(e={},t={})=>({name:"less-loader",setup:s=>{let c=t.filter;s.onResolve({filter:c||/\.less$/,namespace:"file"},async n=>{let o=(await s.resolve(n.path,{kind:n.kind,importer:n.importer,resolveDir:n.resolveDir,pluginData:n.pluginData})).path;return{path:o,watchFiles:[o,...u(o,e.paths||[])]}}),s.onLoad({filter:c||/\.less$/,namespace:"file"},async n=>{let l=await k.readFile(n.path,"utf-8"),o=P.dirname(n.path),h=L(v({filename:n.path,relativeUrls:!0},e),{paths:[...e.paths||[],o]});try{return{contents:(await F.render(l,h)).css,loader:"css",resolveDir:o}}catch(m){return{errors:[y(m)],resolveDir:o}}})}});export{A as lessLoader};
